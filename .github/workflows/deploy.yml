name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    ## checkout후 자바 17 버전으로 설정을 합니다
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      ## gradlew 의 권한을 줍니다.
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      ## gradle build
      - name: Build with Gradle
        run: ./gradlew clean build --info
      ## 이미지 태그에 시간 설정을 하기위해서 현재 시간을 가져옵니다.
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
      ## AWS에 로그인합니다. aws-region은 서울로 설정(ap-northeast-2)했습니다
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      ## ECR에 로그인합니다
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      ## sample라는 ECR 리파지터리에 현재 시간 태그를 생성하고, 푸쉬합니다. xxx부분은 본인의 레파지터리 주소입니다..
      ## 앞의 스탭에서 ${{steps.current-time.outputs.formattedTime}}로 현재 시간을 가져옵니다.
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          ECR_REPOSITORY: board # ecr 이름
          IMAGE_TAG: ${{steps.current-time.outputs.formattedTime}}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

#      - name: Setup Kustomize test
#        uses: imranismail/setup-kustomize@v1
#
#      - name: Checkout for Kustomize repository
#        uses: actions/checkout@v2
#        with:
#          # kubernetes yaml 파일 저장
#          repository: coolcjg/eks # k8s yaml 파일이 있는 repo
#          ref: master  # branch 이름
#          # 내 repository에 push 하기 위한 Personal Access Token이 필요
#          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # Github Action token을 발급받아서 repo secrect에 등록해줘야한다
#          path: eks # 최상위 경로로 repository와 동일하게 설정
#
#      # 새 이미지 버전으로 파일의 태그값 수정
#      # cd path 수정
#      # kustomize 로 image tag 값 변경
#      - name: Update Kubernetes resources
#        run: |
#          pwd
#          echo ${{ steps.build-image.outputs.image }}
#          cd eks
#          kustomize edit set image ${{ steps.build-image.outputs.image }}
#          cat kustomization.yaml
#
#      # 수정된 kustomization.yaml 파일 commit push
#      - name: Commit minifest files
#        run: |
#          cd eks
#          git config --global user.email "coolcjg@naver.com"
#          git config --global user.name "coolcjg"
#          git commit -am "Update image tag"
#          git push -u origin master

